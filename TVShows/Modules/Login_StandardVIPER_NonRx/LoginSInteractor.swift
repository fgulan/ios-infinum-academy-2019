//
//  LoginSInteractor.swift
//  TVShows
//
//  Created by Filip Gulan on 29/07/2018.
//  Copyright (c) 2018 Filip Gulan. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import Foundation
import Alamofire
import CodableAlamofire

final class LoginSInteractor {
    
    private let _sessionManager: SessionManager
    
    init(sessionManager: SessionManager = ShowsSessionManager.session) {
        _sessionManager = sessionManager
    }
}

// MARK: - Extensions -

extension LoginSInteractor: LoginSInteractorInterface {
    
    func login(email: String, password: String, completion: @escaping (Result<LoginData>) -> ()) {
        let sessionManager = _sessionManager
        let request = Router.User.loginWith(email: email, password: password)
        sessionManager
            .request(request)
            .validate()
            .responseDecodableObject(keyPath: "data") { (response: DataResponse<LoginData>) in
                if let token = response.result.value?.token {
                    sessionManager.adapter = TokenAdapter(token: token)
                }
                completion(response.result)
            }
    }
    
    func register(email: String, password: String, completion: @escaping (Result<User>) -> ()) {
        let request = Router.User.registerWith(email: email, password: password)
        _sessionManager
            .request(request)
            .validate()
            .responseDecodableObject(keyPath: "data") { (response: DataResponse<User>) in
                completion(response.result)
            }
    }
}
