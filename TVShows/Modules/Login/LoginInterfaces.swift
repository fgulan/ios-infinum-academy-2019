//
//  LoginInterfaces.swift
//  TVShows
//
//  Created by Filip Gulan on 29/07/2018.
//  Copyright (c) 2018 Filip Gulan. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit
import RxSwift
import RxCocoa

enum Login {
    
    struct ViewOutput {
        let email: Driver<String>
        let password: Driver<String>
        let rememberMe: Driver<Bool>
        let loginPressed: Driver<Void>
        let registerPressed: Driver<Void>
    }
    
    struct ViewInput {
        let loginEnabled: Driver<Bool>
        let registerEnabled: Driver<Bool>
    }
    
    struct Model {
        let email: String
        let password: String
        let rememberMe: Bool
    }
    
    enum NavigationOption {
        case home
    }
}

protocol LoginWireframeInterface: WireframeInterface {
    func navigate(to option: Login.NavigationOption)
    func navigate(using option: Driver<Login.NavigationOption>)
}

protocol LoginViewInterface: ViewInterface {
}

protocol LoginPresenterInterface: PresenterInterface {
    func setupBinding(with output: Login.ViewOutput) -> Login.ViewInput
}

protocol LoginInteractorInterface: InteractorInterface {
    func loginWith(email: String, password: String) -> Single<Void>
    func registerWith(email: String, password: String) -> Single<Void>
}
